---
import Layout from '../layouts/Layout.astro';
import {getCollection} from "astro:content";

const hostsCollection = await getCollection('hosts');
const tpsTestsCollection = await getCollection('tpstests');

const hosts = {} as { [key: string]: { [key: string]: any } }

hostsCollection.forEach(host => {
  hosts[host.id.replaceAll(".md", "")] = host?.data as { [key: string]: any };
});

const tests = tpsTestsCollection.map((test: { data: { [key: string]: any } }) => {

  let averageCpsTestLength = 0;

  if (Array.isArray(test.data.renderTimes)) {
    let totalRenderTime = 0;
    for (const renderTime of test.data.renderTimes) {
      totalRenderTime += renderTime;
    }
    averageCpsTestLength = totalRenderTime / test.data.renderTimes.length;
  }

  let averageCps = 0;
  if (Array.isArray(test.data.chunksPerSecond) && test.data.chunksPerSecond.length > 0) {
    let totalCps = 0;
    for (const cps of test.data.chunksPerSecond) {
      totalCps += cps;
    }
    averageCps = totalCps / test.data.chunksPerSecond.length;
  }

  let cpsPerEuro = averageCps / test.data.pricePerMonth;

  return {
    ...test.data,
    host: hosts[test.data.host],
    averageCpsTestLength: averageCpsTestLength,
    averageCps: averageCps,
    cpsPerEuro: cpsPerEuro,
  }
});

tests.sort((a, b) => {
  if (a.cpsPerEuro > b.cpsPerEuro) {
    return -1;
  } else if (a.cpsPerEuro < b.cpsPerEuro) {
    return 1;
  } else {
    return 0;
  }
});
---

<Layout>
  <section class="header">
    <h1>Minecraft server hosting tests</h1>
    <p>
      Testing by Lunar from CygnusMC.
    </p>
    <p>
      Quick website by YouHaveTrouble.
    </p>
  </section>
  <section id="top-list">
    <table>
      <thead>
      <tr>
        <th>Rank</th>
        <th>Host</th>
        <th>Plan name</th>
        <th>CPS/â‚¬</th>
        <th>CPU</th>
        <th>Cores</th>
        <th>RAM</th>
      </tr>
      </thead>
      <tbody>
      {
        tests.map((testEntry: { [key: string]: any }, index: number) => {
          return (
              <tr class="test-entry">
                <td>{index + 1}</td>
                <td>{testEntry.host.name}</td>
                <td>{testEntry.planName}</td>
                <td>{testEntry.cpsPerEuro.toFixed(2)}</td>
                <td>{testEntry.cpuName}</td>
                <td>{testEntry.cpuCores}</td>
                <td>{testEntry.ram} GB</td>
              </tr>
          )
        })
      }
      </tbody>
    </table>
  </section>
</Layout>

<style lang="scss" scoped>
  .header {
    text-align: center;

    h1 {
      font-size: 2rem;
      margin-bottom: 0.25rem;
    }

    p {
      font-size: 0.9rem;
    }
  }

  #top-list {
    display: flex;
    flex-direction: column;


    margin-top: 2rem;
    scrollbar-gutter: stable;
    overflow-x: auto;

    table {
      margin: 0 auto;
      width: fit-content;
      text-align: left;

      .test-entry {
        padding-block: 1rem;
      }
    }

    td {
      min-width: 5rem;
      padding-block: 0.5rem;
    }
  }
</style>

